

-- Basic select statement

CREATE TABLE EMPL (EMPLOYEE_ID NUMBER (3),EMP_FNAME VARCHAR2 (20),EMP_LNAME VARCHAR2 (20),SALARY NUMBER (10));



INSERT INTO EMPL VALUES (101,'SRINI','VASAN',6000);
INSERT INTO EMPL VALUES (102,'SRI','DEVI',7000);
INSERT INTO EMPL VALUES (103,'MEENA','KUMARI',8000);
INSERT INTO EMPL VALUES (104,'DHEEPA','LAKSHMI',10000);
INSERT INTO EMPL VALUES (103,'BOOMI','RAJA',15000);
INSERT INTO EMPL VALUES (101,'KIRU','BAHAR',7000);
INSERT INTO EMPL VALUES (105,'NITHYA','SRI',12000);

SELECT * FROM EMPL;

SELECT EMPLOYEE_ID,EMP_FNAME,EMP_LNAME,SALARY FROM EMPL;

--column alias
SELECT EMPLOYEE_ID AS EMPL_ID,EMP_FNAME EMPLOYEE_FIRSTNAME,EMP_LNAME EMPLOYEE_LASTNAME,SALARY EMPLOYEE_SALARY FROM EMPL;

-- column concatenation
SELECT EMPLOYEE_ID,CONCAT(EMP_FNAME,EMP_LNAME),SALARY FROM EMPL;

SELECT EMPLOYEE_ID,CONCAT(CONCAT(EMP_FNAME,' '),EMP_LNAME),SALARY FROM EMPL;

SELECT EMPLOYEE_ID,EMP_FNAME||' '||EMP_LNAME,SALARY FROM EMPL;

SELECT EMPLOYEE_ID,EMP_FNAME||' '||EMP_LNAME,Q'['S SALARY IS]',SALARY FROM EMPL;

-- column calculation
SELECT EMPLOYEE_ID,EMP_FNAME,EMP_LNAME,SALARY+200 FROM EMPL;

SELECT EMPLOYEE_ID,EMP_FNAME,EMP_LNAME,SALARY*2 FROM EMPL;

-- unique department_id
SELECT EMPLOYEE_ID FROM EMPL;

SELECT COUNT(EMPLOYEE_ID) FROM EMPL;

SELECT DISTINCT(EMPLOYEE_ID) FROM EMPL;

SELECT COUNT(DISTINCT(EMPLOYEE_ID)) FROM EMPL;

--ORDER BY
SELECT * FROM EMPL;

SELECT * FROM EMPL ORDER BY EMPLOYEE_ID;

SELECT * FROM EMPL ORDER BY SALARY;

SELECT * FROM EMPL ORDER BY SALARY DESC;

--ROWNUM ,ROWID
SELECT ROWNUM,ROWID,EMPLOYEE_ID,EMP_FNAME FROM EMPL;

SELECT ROWNUM,ROWID,E.* FROM EMPL E;

--WHERE CLASS 
--RELATIONAL OPRATOR
SELECT * FROM EMPL;

SELECT * FROM EMPL WHERE EMPLOYEE_ID = 102;

SELECT * FROM EMPL WHERE EMPLOYEE_ID != 102;

SELECT * FROM EMPL WHERE SALARY < 8000;

SELECT * FROM EMPL WHERE SALARY > 8000;

SELECT * FROM EMPL WHERE SALARY >= 8000;

SELECT * FROM EMPL WHERE SALARY <= 8000;

--LOGICAL OPRATOR
SELECT * FROM EMPL WHERE EMPLOYEE_ID = 102 AND SALARY = 8000;

SELECT * FROM EMPL WHERE EMPLOYEE_ID = 102 OR SALARY = 8000;

--IN ,NOT IN
SELECT * FROM EMPL WHERE EMPLOYEE_ID IN (101,102,103);

SELECT * FROM EMPL WHERE EMPLOYEE_ID NOT IN (101,102,103);

--ROWNUM
SELECT * FROM EMPL WHERE ROWNUM <= 5;

--IS NULL ,IS NOT NULL
INSERT INTO EMPL (EMPLOYEE_ID) VALUES (106);
INSERT INTO EMPL (EMPLOYEE_ID) VALUES (107);
INSERT INTO EMPL (EMPLOYEE_ID) VALUES (108);

SELECT * FROM EMPL;

SELECT * FROM EMPL WHERE SALARY IS NULL;

SELECT * FROM EMPL WHERE SALARY IS NOT NULL;

--LIKE ,NOT LIKE
SELECT * FROM EMPL WHERE EMP_FNAME LIKE '%I';

SELECT * FROM EMPL WHERE EMP_FNAME LIKE 'S%';

SELECT * FROM EMPL WHERE EMP_LNAME LIKE '_E_I';

SELECT * FROM EMPL WHERE EMP_LNAME LIKE 'S%I';

SELECT * FROM EMPL WHERE EMP_LNAME NOT LIKE 'S%I';


/*
LEVEL:
------

LEVEL works only in hierarchical queries

You must include both START WITH and CONNECT BY

Without CONNECT BY, LEVEL is undefined

If you want, I can help you design a hierarchical query for your 
data â€” just share your employees sample rows!
*/

select employee_id, level from employees;

SELECT employee_id, first_name, LEVEL, MANAGER_ID
FROM employees
START WITH manager_id IS NULL
CONNECT BY PRIOR employee_id = manager_id;

SELECT employee_id, first_name, LEVEL, manager_id
FROM employees
WHERE LEVEL <= 3
START WITH manager_id IS NULL
CONNECT BY PRIOR employee_id = manager_id;

