--SINGLE ROW FUNCTIONS IN  ORACLE
--1 CASE FUNCTION
--2 NUMBER FUNCTION
--3 DATE FUNCTION
--4 GENERAL FUNCTION
--5 conversion function

--1 CASE FUNCTION
--1 CASE MANIPULATION
        -- 1 UPPER
        -- 2 LOWER
        -- 3 INITCAP
        
SELECT UPPER('upper')FROM DUAL;

SELECT LOWER('UPPER CONVERT to Lower')FROM DUAL;

SELECT INITCAP('UPPER CONVERT to Lower')FROM DUAL;
------------------------------------------------------
SELECT * FROM EMPLOYEES;

CREATE TABLE EMPLOYEE(EMP_FNAME VARCHAR2(20));

SELECT * FROM EMPLOYEE;

INSERT INTO EMPLOYEE VALUES ('ChennAI');

INSERT INTO EMPLOYEE VALUES ('chennai');

INSERT INTO EMPLOYEE VALUES ('CHENNAI');

SELECT * FROM EMPLOYEE WHERE EMP_FNAME='CHENNAI';
SELECT * FROM EMPLOYEE WHERE EMP_FNAME='chennai';
SELECT * FROM EMPLOYEE WHERE UPPER(EMP_FNAME)='CHENNAI';
SELECT * FROM EMPLOYEE WHERE LOWER(EMP_FNAME)='chennai';

--CHARACTER MANIPULATION
             -- 1)LENGTH() 2)CONCAT() 3)REVERSE()
			 -- 4)SUBSTR() 5)INSTR()
			 -- 6)LPAD() 7)RPAD()
			 -- 8)LTRIM() 9)RTRIM() 10)TRIM()
			 -- 11)REPLACE() 12)TRANSLATE()
--LENGTH             
SELECT EMP_FNAME,LENGTH(EMP_FNAME) FROM EMPLOYEE;
--REVERSE
SELECT EMP_FNAME,REVERSE(EMP_FNAME) FROM EMPLOYEE;
--SUBSTRING
SELECT SUBSTR('HI THIS IS SUBSTRING',2)FROM DUAL;

SELECT SUBSTR('HI THIS IS SUBSTRING',-2)FROM DUAL;

SELECT SUBSTR('HI THIS IS SUBSTRING',1,10)FROM DUAL;

--INSTR ('DATA','RETRIVE DATA',STARTING POSITION,OCCUERRENCE)
select INSTR('CORPORATE FLOOR','OR') from dual;
select INSTR('CORPORATE FLOOR','OR',6) from dual;
select INSTR('CORPORATE FLOOR','OR',3,2) from dual;
select INSTR('CORPORATE FLOOR','OR',3,1) from dual;

SELECT SUBSTR('SELVA@GMAIL.COM',1,INSTR('SELVA@GMAIL.COM','@')-1) FROM DUAL;
SELECT SUBSTR('SELVA@GMAIL.COM',INSTR('SELVA@GMAIL.COM','@'),1) FROM DUAL;
SELECT SUBSTR('SELVA@GMAIL.COM',INSTR('SELVA@GMAIL.COM','@')+1,5) FROM DUAL;
SELECT SUBSTR('SELVA@GMAIL.COM',INSTR('SELVA@GMAIL.COM','.'),4) FROM DUAL;
SELECT SUBSTR('SELVA@GMAIL.COM',INSTR('SELVA@GMAIL.COM','.')+1,3) FROM DUAL;

--LPAD ,RPAD
SELECT LPAD(5000,10,'$')FROM DUAL;

SELECT RPAD(5000,10,'$')FROM DUAL;

--LTRIM ,RTRIM ,TRIM
SELECT LTRIM('$$$$100$$$$','$') FROM DUAL;

SELECT RTRIM('$$$$100$$$$','$') FROM DUAL;

SELECT LTRIM(RTRIM('$$$$100$$$$','$'),'$') FROM DUAL;

SELECT TRIM('      $$$$100$$$$     ') FROM DUAL;

Select length('      000000000004546460000000        '),TRIM('      000000000004546460000000        '),
              length(TRIM('      000000000004546460000000        ')) from dual;
              
--REPLASE
SELECT 'WELCOM TO ORACLE SESSION', REPLACE('WELCOM TO ORACLE SESSION','LE','XYZ') FROM DUAL;

--TRANSLATE
SELECT 'WELCOM TO ORACLE SESSION', TRANSLATE('WELCOM TO ORACLE SESSION','LE','XYZ') FROM DUAL;


--2 NUMBER FUNCTION

        -- 1)ROUND() 2)TRUNC() 3)MOD() 4)POWER()
		-- 5)ABS()6)SIGN() 7)FLOOR() 8)CEIL() 
        
-- ROUND
SELECT ROUND(4.96731) FROM DUAL;

SELECT ROUND(4.96731,2) FROM DUAL;

--TRUNC
SELECT TRUNC(4.96731) FROM DUAL;

SELECT TRUNC(4.96731,2) FROM DUAL;

--FLOOR
SELECT FLOOR(4.96731) FROM DUAL; --SMALLEST VALUE

--CEIL
SELECT CEIL(4.96731) FROM DUAL; --GRATEST VALUE

--MOD
SELECT MOD(7,2) FROM DUAL//;

--POWER
SELECT POWER(7,2) FROM DUAL;

--ABSOLUTE 
SELECT ABS(-12),ABS(12) FROM DUAL;

--SIGN
SELECT SIGN(-12),SIGN(12) FROM DUAL;

--SQRT
SELECT SQRT(25) FROM DUAL;
--------------------------------------------------------
--3 DATE FUNCTION

            --1 ADD MONTHS  2.MONTHS BETWEEN  3.NEXT DAY  4.LAST DAY

SELECT Sysdate from dual;

SELECT Sysdate+1 from dual;

SELECT to_char(to_date('18-Jan-2022'),'DD-MONTH-YYYY') from dual;

-- Possible Condition:

       --  Date+ NUMBER   ---Possible
       -- Date-NUMBER     ---Possible
       -- Date-Date       ---Possible
       -- Date+Date       ---Not Possible
		
SELECT to_date('25-03-2022')+1 from dual;
        
SELECT to_date('25-03-2022')-1 from dual;
        
SELECT to_date('25-07-2023')-to_date('21-03-2023') from dual;

---  1)ADD_MONTHS:  USED TO ADD NUMBER OF MONTHS (N)
	-- syntax
   -- ADD_MONTHS(DATE_EXPRESSION,MONTH);
    
	       SELECT ADD_MONTHS(SYSDATE,1) from dual;
           SELECT ADD_MONTHS(SYSDATE,-1) from dual;
           SELECT ADD_MONTHS(DATE '2023-7-10',12) FROM DUAL;
           SELECT ADD_MONTHS(DATE '2023-7-10',-12) FROM DUAL;
           SELECT ADD_MONTHS(to_date('25-03-2022'),12) FROM DUAL;
           
---  2)MONTHS_BETWEEN:   USED TO GET THE NUMBER OF MONTHS BETWEEN TWO DATES
    -- SYNTAX
    --MONTHS_BETWEEN(START_DATE,END_DATE);
	   
	       SELECT ABS(MONTHS_BETWEEN(DATE '2022-05-25',DATE '2022-07-25')) from dual;
---3) NEXT_DAY:  USED TO GET THE DATE OF THE WEEKDAY SPECIFIED BYE DAY NAME
    -- SYNTAX 
    NEXT_DAY(DATE,WEEKDAY);
    
		   SELECT next_DAY(SYSDATE,'SAT') from dual;
---4) LAST_DAY:  USED TO GET THE LAST DAY OF THE MONTH
    -- SYNTAX
    --LAST_DAY(DATE);
           SELECT LAST_DAY(SYSDATE) from dual;
           
---4 CONVERSON FUNCTION

       -- USED TO CONVERT THE UNEXPECTED DATATYPE TO A DESIRED DATATYPE
        
         --Implicit Conversion:
		 
		     SELECT 10+10 from dual; --20
             SELECT 10+'10' from dual; --20
			 
		--Explicit Conversion:
		      TO_NUMBER
			  TO_DATE
			  TO_CHAR
        
   -- 1 TO_CHAR -- USED TO CONVERT NUMERIC OR DATE INPUT TO CHARACTER DATATYPE
        
      --  SYNTAX --
      --1  TO_CHAR(VALUE,FORMAT);
      
              SELECT TO_DATE('25-Jul-2019','DD-Mon-YYYY') from dual;--25-07-19
              SELECT TO_CHAR(TO_DATE('25-Jul-2019','DD-Mon-YYYY'),'DD-MON-YYYY') from dual;---25-JUL-2019
			  SELECT TO_CHAR(TO_DATE('25-MAR-2022','DD-Mon-YYYY'),'DAY') from dual;--FRIDAY   
			  SELECT TO_CHAR(TO_DATE('28-JUL-2023','DD-Mon-YYYY'),'d') from dual;  --6 --2.monday,3.tuesday,4.wed,5.thurs,6.fri,7.sat,1.sunday
			  SELECT TO_CHAR(TO_DATE('25-MAR-2022','DD-Mon-YYYY'),'dd') from dual;  --25
			  SELECT TO_CHAR(TO_DATE('25-MAR-2022','DD-Mon-YYYY'),'ddd') from dual;  --084  --365 DAYS
              SELECT TO_CHAR(TO_DATE('25-MAR-2022','DD-Mon-YYYY'),'MON') from dual;
              SELECT TO_CHAR(TO_DATE('25-MAR-2022','DD-Mon-YYYY'),'MONTH') from dual;
              SELECT TO_CHAR(SYSDATE,'RM') from dual;--- III -- MONT IN ROMAN LETTER
			  SELECT TO_CHAR(SYSDATE,'HH:mi:ss') from dual;--01:46:45
			  SELECT TO_CHAR(SYSDATE,'Q') from dual;  -- 1.JAN,FEB,MAR - 2.APR,MAR,MAY - 3,4---QUARTERS
			  SELECT TO_CHAR(SYSDATE,'WW') from dual;  --- WEAK IN YEAR 
			  SELECT TO_CHAR(SYSDATE,'W') from dual;   --- WEAK IN MONTH
              SELECT TO_CHAR(SYSDATE,'YYYY') from dual;  --2022
              SELECT TO_CHAR(SYSDATE,'DDSPTH') from dual;
              SELECT TO_CHAR(123.45,'9G99D99') from dual;  -- 1,23.45
              SELECT TO_CHAR(123.45,'9G99D99') from dual;  -- 1,23.45 --'L9G99D99','C9G99D99'
              SELECT TO_CHAR(123.45,'C9G99D99') from dual;
              SELECT TO_CHAR(123,'999D99') from dual;  -- 123.00

      --2 TO_DATE  -- USED TO CONVERT CHARACTER TO DATE DATATYPE
      
        --SYNTAX
         --   TO_DATE(STRING,FORMAT);
            
            SELECT TO_DATE('2023-07-28','YYYY-MM-DD') from dual; 
            SELECT TO_DATE('20230728','YYYYMMDD') from dual; 

    --3 TO_NUMBER  -- USED TO CONVERT CHARACTER TO NUMERIC DATATYPE
    
        --SYNTAX
            -- TO_NUMBER(STRING,FORMAT);
            
            SELECT TO_NUMBER('INR1,23.45','C9G99D99') from dual;
            
--5  - GENERAL FUNCTION OR NULL FUNCTION

       
        -- NULL IS NOT EQUA TO SPACE OR NULL IS NOT A SPASE
        -- NULL IS NULL
        
    --1.NVL
    --2.NVL2
    --3.NULLIF
    --4.COALESCE
            --1. NVL
               SELECT NVL('','YES') from DUAL;  --YES
			   SELECT NVL(' ','YES') from DUAL;   ---nothing RETURN
			   SELECT NVL('$','YES') from DUAL;   --$
			   SELECT NVL('10','YES') from DUAL;   --10
			   SELECT NVL('',0) from DUAL;  --0
			   SELECT NVL(null,0) from DUAL;   --0
            --2. NVL2
			   SELECT NVL2(null,1,2) from DUAL;   --2
			   SELECT NVL2('hai',1,2) from DUAL;    --1
            --3. NULLIF
			   SELECT NULLIF(2,2) from DUAL;    --(null)
			   SELECT NULLIF(8,2) from DUAL;  --8
            --4. COALESCE
			   SELECT COALESCE(null,null,7,8,null) from DUAL;   --7
               SELECT COALESCE(2,3,null,null,7,8,null) from dual;   --2

---NVL
--IT ACCEPTS ONLY TWO ARGUMENT IF 1ST ARGUMENT IS NULL THEN PRINTS THE 2ND ARGUMENT
 -- SYNTAX
  -- NVL (ARGUMENT1,ARGUMENT2)
  
SELECT * FROM EMPLOYEES;

SELECT COMMISSION_PCT,NVL(COMMISSION_PCT,100) FROM EMPLOYEES;

-- NVL2
 -- IT ACCEPTS ONLY THREE ARGUMENTS IF 1ST ARGUMENT IS NULL THEN PRINTS THE 3RD ARGUMENT
 -- ELSE PRINTS THE 2ND ARGUMENT
  -- SYNTAX
   -- NVL2 (ARGUMENT_1,ARGUMENT_2,ARGUMENT_3)
   
   SELECT COMMISSION_PCT,NVL2(COMMISSION_PCT,10,20) FROM EMPLOYEES;
   
-- NULLIF
 -- IT ACCEPTS ONLY TWO ARGUMENTS IF BOTH ARGUMENTS ARE SAME THEN PRINTS NULL 
 -- ELSE PRINTS THE 1ST ARGUMENT
  -- SYNTAX
   -- NULLIF (ARGUMENT_1,ARGUMENT_2)
    SELECT SALARY,COMMISSION_PCT,NULLIF(SALARY,COMMISSION_PCT) FROM EMPLOYEES;

-- COALESCE
 -- IT PRINTS THE 1ST NOT NULL VALUE
 -- IT ACCEPTS (N)NUMBER OF COLUMNS
  -- SYNTAX
   -- COALESCE (ARGUMENT_1,ARGUMENT_2,ARGUMENT_3,........,ARGUMENT_N)

SELECT COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID,COALESCE(COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID) FROM EMPLOYEES;



-----------------------------------------------

   

