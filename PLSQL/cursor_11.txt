/*
Cursor
------

In Oracle SQL, cursors are used to process query results row-by-row. 
There are two types of cursors: implicit cursors and explicit cursors. 

Implicit Cursor :
-----------------
Implicit cursors are automatically created by Oracle whenever an SQL statement is executed. 
implicit cursors are used for single-row queries such as 'SELECT INTO'.
*/
--Example of Implicit Cursor:
-----------------------------

CREATE TABLE company (
    employee_id NUMBER PRIMARY KEY,
    first_name VARCHAR2(50),
    last_name VARCHAR2(50),
    salary NUMBER
);

INSERT INTO company (employee_id, first_name, last_name, salary) VALUES (1, 'John', 'Doe', 50000);
INSERT INTO company (employee_id, first_name, last_name, salary) VALUES (2, 'Jane', 'Smith', 60000);

SELECT * FROM company;

--Use an implicit cursor to fetch data :
----------------------------------------

SET SERVEROUTPUT ON;
DECLARE
    v_first_name company.first_name%TYPE;
    v_last_name company.last_name%TYPE;
    v_salary company.salary%TYPE;
BEGIN
    SELECT first_name, last_name, salary INTO v_first_name, v_last_name, v_salary
    FROM company
    WHERE employee_id = 1;

    DBMS_OUTPUT.PUT_LINE('First Name: ' || v_first_name);
    DBMS_OUTPUT.PUT_LINE('Last Name: ' || v_last_name);
    DBMS_OUTPUT.PUT_LINE('Salary: ' || v_salary);
END;
/

drop table company;
-----------------------------------------------------------------------------------

/*
Explicit Cursor :
-----------------
Explicit cursors provide more control over the context area and allow you to handle query results that return multiple rows. 
They require more steps to use: declare, open, fetch, and close.
*/

--Example of Explicit Cursor :
------------------------------

CREATE TABLE company (
    employee_id NUMBER PRIMARY KEY,
    first_name VARCHAR2(50),
    last_name VARCHAR2(50),
    salary NUMBER
);

INSERT INTO company (employee_id, first_name, last_name, salary) VALUES (1, 'John', 'Doe', 50000);
INSERT INTO company (employee_id, first_name, last_name, salary) VALUES (2, 'Jane', 'Smith', 60000);
INSERT INTO company (employee_id, first_name, last_name, salary) VALUES (3, 'Jim', 'Brown', 55000);

SELECT * FROM company;

--Use an explicit cursor to fetch data :
----------------------------------------

DECLARE
    CURSOR emp_cursor IS
        SELECT employee_id, first_name, last_name, salary
        FROM company;

    v_employee_id company.employee_id%TYPE;
    v_first_name company.first_name%TYPE;
    v_last_name company.last_name%TYPE;
    v_salary company.salary%TYPE;
BEGIN
    OPEN emp_cursor;

    LOOP
        FETCH emp_cursor INTO v_employee_id, v_first_name, v_last_name, v_salary;
        EXIT WHEN emp_cursor%NOTFOUND;

        DBMS_OUTPUT.PUT_LINE('Employee ID: ' || v_employee_id);
        DBMS_OUTPUT.PUT_LINE('First Name: ' || v_first_name);
        DBMS_OUTPUT.PUT_LINE('Last Name: ' || v_last_name);
        DBMS_OUTPUT.PUT_LINE('Salary: ' || v_salary);
        DBMS_OUTPUT.PUT_LINE(' ');
    END LOOP;

    CLOSE emp_cursor;
END;
/

-----------------------------------------------------------------------------------

/*
cursor FOR loop:
----------------

In Oracle PL/SQL, the cursor FOR loop simplifies cursor handling by implicitly declaring,
opening, fetching, and closing the cursor. 
*/

DECLARE
    CURSOR emp_cursor IS
        SELECT employee_id, first_name, last_name, salary
        FROM company;
BEGIN
    FOR emp_record IN emp_cursor LOOP
        DBMS_OUTPUT.PUT_LINE('Employee ID: ' || emp_record.employee_id);
        DBMS_OUTPUT.PUT_LINE('First Name: ' || emp_record.first_name);
        DBMS_OUTPUT.PUT_LINE('Last Name: ' || emp_record.last_name);
        DBMS_OUTPUT.PUT_LINE('Salary: ' || emp_record.salary);
        DBMS_OUTPUT.PUT_LINE(' ');
    END LOOP;
END;
/

-----------------------------------------------------------------------------------
/*
cursor attributes :
-------------------

In Oracle PL/SQL, cursor attributes are used to get information about the state of the cursor.
These attributes include %FOUND, %NOTFOUND, %ISOPEN, and %ROWCOUNT.

Summary of Cursor Attributes:
-----------------------------
1. %FOUND: Checks if the last fetch returned a row.
2. %NOTFOUND: Checks if the last fetch did not return a row.
3. %ISOPEN: Checks if the cursor is open.
4. %ROWCOUNT: Returns the number of rows fetched so far.

These cursor attributes provide useful information about the cursor's state and the rows fetched,
allowing you to control the flow of your PL/SQL program more effectively.
*/

--1. %FOUND :
-------------

DECLARE
    CURSOR emp_cursor IS
        SELECT employee_id, first_name, last_name, salary
        FROM company;
    v_employee_id company.employee_id%TYPE;
    v_first_name company.first_name%TYPE;
    v_last_name company.last_name%TYPE;
    v_salary company.salary%TYPE;
BEGIN
    OPEN emp_cursor;

    FETCH emp_cursor INTO v_employee_id, v_first_name, v_last_name, v_salary;
    
    IF emp_cursor%FOUND THEN
        DBMS_OUTPUT.PUT_LINE('First row found:');
        DBMS_OUTPUT.PUT_LINE('Employee ID: ' || v_employee_id);
        DBMS_OUTPUT.PUT_LINE('First Name: ' || v_first_name);
        DBMS_OUTPUT.PUT_LINE('Last Name: ' || v_last_name);
        DBMS_OUTPUT.PUT_LINE('Salary: ' || v_salary);
    ELSE
        DBMS_OUTPUT.PUT_LINE('No rows found.');
    END IF;

    CLOSE emp_cursor;
END;
/

-----------------------------------------------------------------------------------
--2. %NOTFOUND :
----------------

DECLARE
    CURSOR emp_cursor IS
        SELECT employee_id, first_name, last_name, salary
        FROM company;
    v_employee_id company.employee_id%TYPE;
    v_first_name company.first_name%TYPE;
    v_last_name company.last_name%TYPE;
    v_salary company.salary%TYPE;
BEGIN
    OPEN emp_cursor;

    FETCH emp_cursor INTO v_employee_id, v_first_name, v_last_name, v_salary;
    
    IF emp_cursor%NOTFOUND THEN
        DBMS_OUTPUT.PUT_LINE('No rows found.');
    ELSE
        DBMS_OUTPUT.PUT_LINE('First row found:');
        DBMS_OUTPUT.PUT_LINE('Employee ID: ' || v_employee_id);
        DBMS_OUTPUT.PUT_LINE('First Name: ' || v_first_name);
        DBMS_OUTPUT.PUT_LINE('Last Name: ' || v_last_name);
        DBMS_OUTPUT.PUT_LINE('Salary: ' || v_salary);
    END IF;

    CLOSE emp_cursor;
END;
/

-----------------------------------------------------------------------------------
--3. %ISOPEN :
--------------

DECLARE
    CURSOR emp_cursor IS
        SELECT employee_id, first_name, last_name, salary
        FROM company;
BEGIN
    IF emp_cursor%ISOPEN THEN
        DBMS_OUTPUT.PUT_LINE('Cursor is already open.');
    ELSE
        DBMS_OUTPUT.PUT_LINE('Cursor is not open.');
    END IF;
    
    OPEN emp_cursor;

    IF emp_cursor%ISOPEN THEN
        DBMS_OUTPUT.PUT_LINE('Cursor is now open.');
    END IF;

    CLOSE emp_cursor;

    IF NOT emp_cursor%ISOPEN THEN
        DBMS_OUTPUT.PUT_LINE('Cursor is now closed.');
    END IF;
END;
/

-----------------------------------------------------------------------------------
--4. %ROWCOUNT :
----------------

DECLARE
    CURSOR emp_cursor IS
        SELECT employee_id, first_name, last_name, salary
        FROM company;
    v_employee_id company.employee_id%TYPE;
    v_first_name company.first_name%TYPE;
    v_last_name company.last_name%TYPE;
    v_salary company.salary%TYPE;
BEGIN
    OPEN emp_cursor;

    LOOP
        FETCH emp_cursor INTO v_employee_id, v_first_name, v_last_name, v_salary;
        EXIT WHEN emp_cursor%NOTFOUND;

        DBMS_OUTPUT.PUT_LINE('Employee ID: ' || v_employee_id);
        DBMS_OUTPUT.PUT_LINE('First Name: ' || v_first_name);
        DBMS_OUTPUT.PUT_LINE('Last Name: ' || v_last_name);
        DBMS_OUTPUT.PUT_LINE('Salary: ' || v_salary);
        DBMS_OUTPUT.PUT_LINE('Rows fetched so far: ' || emp_cursor%ROWCOUNT);
        DBMS_OUTPUT.PUT_LINE('');
    END LOOP;

    CLOSE emp_cursor;
END;
/

-----------------------------------------------------------------------------------
--Declare the cursor and use %FOUND :
-------------------------------------

DECLARE
    CURSOR emp_cursor IS
        SELECT employee_id, first_name, last_name, salary
        FROM company;
    v_employee_id company.employee_id%TYPE;
    v_first_name company.first_name%TYPE;
    v_last_name company.last_name%TYPE;
    v_salary company.salary%TYPE;
BEGIN
    -- Open the cursor
    OPEN emp_cursor;

    -- Fetch the first row
    FETCH emp_cursor INTO v_employee_id, v_first_name, v_last_name, v_salary;

    -- Check if the first row was fetched
    IF emp_cursor%FOUND THEN
        DBMS_OUTPUT.PUT_LINE('First row found:');
        DBMS_OUTPUT.PUT_LINE('Employee ID: ' || v_employee_id);
        DBMS_OUTPUT.PUT_LINE('First Name: ' || v_first_name);
        DBMS_OUTPUT.PUT_LINE('Last Name: ' || v_last_name);
        DBMS_OUTPUT.PUT_LINE('Salary: ' || v_salary);
        DBMS_OUTPUT.PUT_LINE('');
    ELSE
        DBMS_OUTPUT.PUT_LINE('No rows found.');
    END IF;

    -- Fetch the second row
    FETCH emp_cursor INTO v_employee_id, v_first_name, v_last_name, v_salary;

    -- Check if the second row was fetched
    IF emp_cursor%FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Second row found:');
        DBMS_OUTPUT.PUT_LINE('Employee ID: ' || v_employee_id);
        DBMS_OUTPUT.PUT_LINE('First Name: ' || v_first_name);
        DBMS_OUTPUT.PUT_LINE('Last Name: ' || v_last_name);
        DBMS_OUTPUT.PUT_LINE('Salary: ' || v_salary);
    ELSE
        DBMS_OUTPUT.PUT_LINE('No more rows.');
    END IF;

    -- Close the cursor
    CLOSE emp_cursor;
END;
/

-----------------------------------------------------------------------------------
--Declare the cursor and use %FOUND :
-------------------------------------
DECLARE
    CURSOR emp_cursor IS
        SELECT employee_id, first_name, last_name, salary
        FROM company
        WHERE salary = 80000;
    v_employee_id company.employee_id%TYPE;
    v_first_name company.first_name%TYPE;
    v_last_name company.last_name%TYPE;
    v_salary company.salary%TYPE;
BEGIN
    -- Open the cursor
    OPEN emp_cursor;

    -- Fetch the first row (which should be the row with salary 80000)
    FETCH emp_cursor INTO v_employee_id, v_first_name, v_last_name, v_salary;

    -- Check if the row was fetched
    IF emp_cursor%FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Row found with salary 80000:');
        DBMS_OUTPUT.PUT_LINE('Employee ID: ' || v_employee_id);
        DBMS_OUTPUT.PUT_LINE('First Name: ' || v_first_name);
        DBMS_OUTPUT.PUT_LINE('Last Name: ' || v_last_name);
        DBMS_OUTPUT.PUT_LINE('Salary: ' || v_salary);
        DBMS_OUTPUT.PUT_LINE('');
    ELSE
        DBMS_OUTPUT.PUT_LINE('No rows found with salary 80000.');
    END IF;

    -- Close the cursor
    CLOSE emp_cursor;
END;
/

drop table company;
-----------------------------------------------------------------------------------

